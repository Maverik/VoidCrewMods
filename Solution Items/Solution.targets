<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <ThunderPackageId>$(Title.Replace(' ','').Replace('.','_'))</ThunderPackageId>
        <!-- Thunderstore Id will be of the form Maverik-PackageTitle-0.2 so we may as well use that as our Id since being unique there is a requirement anyway -->
        <PackageId>Maverik-$(ThunderPackageId)</PackageId>
        <AssemblyTitle>$(Title)</AssemblyTitle>
        <Product>Void Crew - $(Title)</Product>
    </PropertyGroup>

    <!-- Source: https://stackoverflow.com/a/66137489/504757 -->
    <UsingTask TaskName="Eval" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
            <Lines ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="True"/>
            <Result ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="True"/>
        </ParameterGroup>
        <Task>
            <Using Namespace="Microsoft.Build.Framework"/>
            <Code Type="Fragment" Language="cs"><![CDATA[
            Result = new TaskItem[Lines.Length];
            for (int i = 0; i < Lines.Length; i++)
                Result[i] = new TaskItem(Lines[i].ItemSpec);
            ]]>
            </Code>
        </Task>
    </UsingTask>

    <!-- shoutout to https://github.com/Cryptoc1/lc-plugin-sdk/blob/main/src/Sdk/Sdk.targets for this gem -->
    <Target Name="_GeneratePluginInfo" BeforeTargets="BeforeCompile" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)$(MSBuildProjectName).PluginInfo.g.cs">
        <PropertyGroup>
            <_GeneratedPluginInfoText>
                <![CDATA[// <auto-generated/>
namespace $(RootNamespace)%3B

[global::System.Runtime.CompilerServices.CompilerGenerated]
public static class PluginInfo
{
    public const string PackageId = "$(PackageId)"%3B
    public const string Title = "$(Title)"%3B
    public const string VersionString = "$(Version)"%3B
    public static Version Version = Version.Parse("$(Version)")%3B
}]]>
            </_GeneratedPluginInfoText>

            <_GeneratedPluginInfoPath>$(IntermediateOutputPath)$(MSBuildProjectName).PluginInfo.g.cs</_GeneratedPluginInfoPath>
        </PropertyGroup>

        <ItemGroup>
            <Compile Include="$(_GeneratedPluginInfoPath)"/>
            <FileWrites Include="$(_GeneratedPluginInfoPath)"/>
        </ItemGroup>
        <WriteLinesToFile Lines="$(_GeneratedPluginInfoText)" File="$(_GeneratedPluginInfoPath)" Overwrite="true"/>
    </Target>

    <Target Name="_ThunderStoreDependencies" BeforeTargets="_GeneratePluginManifest" AfterTargets="Build">
        <ItemGroup>
            <ThunderDependency Include="BepInEx-BepInExPack-5.4.2100" Condition="'$(AssemblyName)' == 'MavsLibCore'"/>
            <ThunderDependency Include="Maverik-MavsLibCore-0.0.1" Condition="'$(AssemblyName)' != 'MavsLibCore'"/>
        </ItemGroup>
    </Target>

    <!-- shoutout to https://github.com/Cryptoc1/lc-plugin-sdk/blob/main/src/Sdk/Sdk.targets for this gem -->
    <Target Name="_GeneratePluginManifest" AfterTargets="Build" Inputs="$(MSBuildAllProjects)" Outputs="$(ThunderPackagingPath)manifest.json">
        <PropertyGroup>
            <_ThunderDependencies>@(ThunderDependency -> '"%(Filename)%(Extension)"')</_ThunderDependencies>
            <_GeneratedManifestText>
                <![CDATA[{
    "name": "$(Title.Replace(' ','').Replace('.','_'))",
    "description": "$(Description)",
    "version_number": "$(Version)",
    "website_url": "$(RepositoryUrl)",
    "dependencies": [$(_ThunderDependencies.Replace('%3B', ','))]
}]]>
            </_GeneratedManifestText>
        </PropertyGroup>

        <WriteLinesToFile Lines="$(_GeneratedManifestText)" File="$(ThunderPackagingPath)manifest.json" WriteOnlyWhenDifferent="true" Overwrite="true"/>
    </Target>

    <Import Project="$(SolutionItemsDir)README.targets" />
    
    <Target Name="_CopyPluginIcons" AfterTargets="_GeneratePluginManifest">
        <ItemGroup>
            <PackageIcon Condition="Exists('$(ProjectDir)icon.png')" Include="$(ProjectDir)icon.png"/>
            <PackageIcon Condition="!Exists('$(ThunderPackagingRoot)$(PackageId).png')" Include="$(DefaultPackageIcon)"/>
        </ItemGroup>
        <Message Importance="High" Text="$(PackageIcon)"/>
        <Copy SourceFiles="@(PackageIcon)" DestinationFiles="@(PackageIcon->'$(ThunderPackagingPath)icon%(extension)')"/>
    </Target>

    <Target Name="_PackageForThunderStore" AfterTargets="_GenerateReadme;_GeneratePluginManifest;_CopyPluginIcons">
        <ZipDirectory SourceDirectory="$(ThunderPackagingPath)" DestinationFile="$(ThunderPackagingRoot)$(PackageId).zip" Overwrite="true" Condition="Exists('$(ThunderPackagingPath)')" />
    </Target>

    <Target Name="_StagePackageForThunderStore" AfterTargets="_PackageForThunderStore">
        <Unzip SourceFiles="$(ThunderPackagingRoot)$(PackageId).zip" DestinationFolder="$(GamePath)" Condition="Exists('$(ThunderPackagingRoot)$(PackageId).zip')" />
        <Delete Files="$(GamePath)manifest.json;$(GamePath)icon.png;$(GamePath)README.md" /> 
    </Target>
</Project>